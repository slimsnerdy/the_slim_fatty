"""
Django settings for the_slim_fatty project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""


import os
from pathlib import Path
from django.contrib.messages import constants as messages
from environs import Env

env = Env()
env.read_env()

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }
 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Templates Directory
# TEMPLATE_DIRS = os.path.join(BASE_DIR,'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_BOX') #‚≠êÔ∏èüì¶

# SECURITY WARNING: don't run with debug turned on in production!
if 'RDS_DB_NAME' in os.environ:
    DEBUG = False
else:               #LOCAL
    DEBUG = True

ALLOWED_HOSTS = [
    env.str('DEV'),     #dev
    env.str('PROD'),    #prod
    env.str('BABA'),    #old_og
    env.str('YAGA'),    #old_og
    '127.0.0.1',
    'theslimfatty.com',
    # '*',     #gets rid of health check issues
]


# Application definition

if 'RDS_DB_NAME' in os.environ:
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'django.contrib.postgres',
        'blog',
        'storages',     #install locally..
        'contact',
        'captcha',
        'accounts.apps.AccountsConfig', # djangoforbeginners-pdf    page 36
        'ckeditor',
        'django.contrib.sites', #sitemap.xml
        'django.contrib.sitemaps',  #sitemap.xml
    ]
else:               #LOCAL
        INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'django.contrib.postgres',
        'blog',
        # 'storages',     #install locally..
        'contact',
        'captcha',
        'accounts.apps.AccountsConfig', # djangoforbeginners-pdf    page 36
        'ckeditor',
        'django.contrib.sites', #sitemap.xml
        'django.contrib.sitemaps',  #sitemap.xml
    ]
        
SITE_ID = 1                                 #added 5-15-23  used for sitemap.xml
# SITE_MODEL = 'accounts.CustomSite'          #added 5-15-23

AUTH_USER_MODEL = 'accounts.CustomUser'     #added 10-28-22

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'the_slim_fatty.middleware.HealthCheckMiddleware',#health check
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'the_slim_fatty.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'accounts.context_processors.custom_site',              #added 5-16-23
            ],
        },
    },
]

WSGI_APPLICATION = 'the_slim_fatty.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if 'RDS_DB_NAME' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }
else:               #LOCAL
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env.str('DB_NAME'),
        'USER': env.str('DB_USER'),
        'PASSWORD': env.str('DB_PASSWORD'),
        'HOST': env.str('DB_HOST'),
        'PORT': env.str('DB_PORT'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = env.str('JUPITER')
# TIME_ZONE = 'UTC'
# TIME_ZONE = None

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


USE_PROD = os.getenv('USE_PROD') == 'TRUE'

if USE_PROD:
    # aws settings
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
    AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME')
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # # s3 static settings
    # STATIC_LOCATION = 'static'
    # STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'
    # # # s3 public media settings
    # PUBLIC_MEDIA_LOCATION = ''
    # MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

    #email
    EMAIL_BACKEND = 'django_ses.SESBackend'
    AWS_SES_REGION_NAME = os.getenv('AWS_SES_REGION_NAME') #(ex: us-east-2)
    AWS_SES_REGION_ENDPOINT = os.getenv('AWS_SES_REGION_ENDPOINT') #(ex: email.us-east-2.amazonaws.com)
    AWS_SES_ACCESS_KEY_ID = os.getenv('AWS_SES_ACCESS_KEY_ID')
    AWS_SES_SECRET_ACCESS_KEY = os.getenv('AWS_SES_SECRET_ACCESS_KEY')
    # DEFAULT_FROM_EMAIL = env.str('TEST_EMAIL')
    DEFAULT_FROM_EMAIL = env.str('DB_EMAIL')   #goated / fixed ; needed for password reset; "Email address is not verified" MessageRejected error/bug
else:
    STATIC_URL = 'static/'
    STATIC_ROOT = BASE_DIR / 'staticfiles'  #collectstatic copies into here
    MEDIA_URL = ''
    MEDIA_ROOT = ''

    #email
    # DEFAULT_FROM_EMAIL = env.str('TEST_EMAIL')
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'    #dev mode
    EMAIL_FILE_PATH = BASE_DIR / "sent_emails"

STATICFILES_DIRS = [
    BASE_DIR / "static",
    # '/var/www/static/',
    ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # DEFAULT_FROM_EMAIL = env.str('TEST_EMAIL')
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'    #dev mode
# EMAIL_BACKEND = 'django_ses.SESBackend'    #prod mode

# LOGIN_REDIRECT_URL = "/"
# LOGOUT_REDIRECT_URL = "/"
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home"

# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'full',
#         'height': 300,
#         'width': 1000,
#     },
# }

# CKEDITOR_CONFIGS = {
#      'default': {
#          'toolbar': 'Basic',
#      },
# }

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Landy',
        'height': 300,
        'width': 1000,
        'toolbar_Landy': [
            ['RemoveFormat', 'SelectAll'],
            ['Save', 'NewPage', 'ExportPdf', 'Preview'],
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['TextColor', 'BGColor'],
            ['Link', 'Unlink'],
            ['CopyFormatting', 'Blockquote', 'Maximize', 'About'],
            ['Source'],
        ],
        'basicEntities': False,
        'entities': False,
    }
}
